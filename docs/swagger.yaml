basePath: /
definitions:
  common.Response:
    properties:
      data: {}
      error:
        type: string
      status:
        type: string
    type: object
  dto.CreateAdminRequest:
    properties:
      email:
        type: string
      fullname:
        type: string
      password:
        type: string
    required:
    - email
    - fullname
    - password
    type: object
  dto.CreateAdminResponse:
    properties:
      email:
        type: string
      fullname:
        type: string
      role:
        type: string
    type: object
  dto.CreateDoctorRequest:
    properties:
      email:
        type: string
      fullname:
        type: string
      no_sip:
        type: string
      password:
        type: string
    required:
    - email
    - fullname
    - no_sip
    - password
    type: object
  dto.CreateDoctorResponse:
    properties:
      email:
        type: string
      fullname:
        type: string
      no_sip:
        type: string
      role:
        type: string
    type: object
  dto.CreateDrugRequest:
    properties:
      code:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  dto.CreateDrugResponse:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  dto.CreateFeedbackCategoryRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - description
    - name
    type: object
  dto.CreateFeedbackCategoryResponse:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  dto.CreateFeedbackRequest:
    properties:
      detail:
        type: string
      feedback_category_id:
        type: integer
      issue:
        type: string
    required:
    - detail
    - feedback_category_id
    - issue
    type: object
  dto.CreateFeedbackResponse:
    properties:
      detail:
        type: string
      feedback_category_id:
        type: integer
      issue:
        type: string
    required:
    - feedback_category_id
    type: object
  dto.CreatePharmacistRequest:
    properties:
      email:
        type: string
      fullname:
        type: string
      no_sipa:
        type: string
      password:
        type: string
    required:
    - email
    - fullname
    - no_sipa
    - password
    type: object
  dto.CreatePharmacistResponse:
    properties:
      email:
        type: string
      fullname:
        type: string
      no_sipa:
        type: string
      role:
        type: string
    type: object
  dto.CreateUserRequest:
    properties:
      email:
        type: string
      fullname:
        type: string
      password:
        type: string
    required:
    - email
    - fullname
    - password
    type: object
  dto.CreateUserResponse:
    properties:
      email:
        type: string
      fullname:
        type: string
      role:
        type: string
    type: object
  dto.EditUserRequest:
    properties:
      age:
        type: integer
      fullname:
        type: string
      height:
        type: number
      no_sip:
        type: string
      no_sipa:
        type: string
      password:
        type: string
      specialist:
        type: string
      title:
        type: string
      weight:
        type: number
    type: object
  dto.EditUserResponse:
    properties:
      age:
        type: integer
      fullname:
        type: string
      height:
        type: number
      no_sip:
        type: string
      no_sipa:
        type: string
      specialist:
        type: string
      title:
        type: string
      weight:
        type: number
    type: object
  dto.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  dto.GoogleLoginRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
    type: object
  dto.ResetPasswordRequest:
    properties:
      password:
        type: string
      token:
        type: string
    required:
    - password
    - token
    type: object
  dto.Status:
    properties:
      data: {}
      name:
        type: string
      status:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API definition for FarmaCare Server
  title: FarmaCare Server
  version: "1.0"
paths:
  /auth/credential:
    get:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get User Credential
      tags:
      - Auth
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: ForgotPasswordRequest
        in: body
        name: ForgotPasswordRequest
        required: true
        schema:
          $ref: '#/definitions/dto.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ForgotPasswordRequest'
      summary: Forgot Password
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: LoginRequest
        in: body
        name: LoginRequest
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
      summary: Login User Google
      tags:
      - Auth
  /auth/login-google:
    post:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: GoogleLoginRequest
        in: body
        name: GoogleLoginRequest
        required: true
        schema:
          $ref: '#/definitions/dto.GoogleLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
      summary: Login User
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Logout User
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: CreateUserRequest
        in: body
        name: CreateUserRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateUserResponse'
      summary: Register New User
      tags:
      - Auth
  /auth/register/admin:
    post:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: CreateAdminRequest
        in: body
        name: CreateAdminRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAdminRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateAdminResponse'
      summary: Register New Admin
      tags:
      - Auth
  /auth/register/doctor:
    post:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: CreateDoctorRequest
        in: body
        name: CreateDoctorRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreateDoctorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateDoctorResponse'
      summary: Register New Doctor
      tags:
      - Auth
  /auth/register/pharmacist:
    post:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: CreatePharmacistRequest
        in: body
        name: CreatePharmacistRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreatePharmacistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreatePharmacistResponse'
      summary: Register New Pharmacist
      tags:
      - Auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: ResetPasswordRequest
        in: body
        name: ResetPasswordRequest
        required: true
        schema:
          $ref: '#/definitions/dto.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResetPasswordRequest'
      summary: Reset Password
      tags:
      - Auth
  /feedback:
    get:
      consumes:
      - application/json
      description: Put all mandatory parameter
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.Response'
      summary: Get All Feedback
      tags:
      - Feedback
  /feedback/category:
    get:
      consumes:
      - application/json
      description: Put all mandatory parameter
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get All Feedback Category
      tags:
      - Feedback
  /feedback/category/{id}:
    get:
      consumes:
      - application/json
      description: Put all mandatory parameter
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get Feedback Category By Id
      tags:
      - Feedback
  /feedback/category/create:
    post:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: CreateFeedbackCategoryRequest
        in: body
        name: CreateFeedbackCategoryRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreateFeedbackCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateFeedbackCategoryResponse'
      summary: Create Feedback Category
      tags:
      - Feedback
  /feedback/create:
    post:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: CreateFeedbackRequest
        in: body
        name: CreateFeedbackRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreateFeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateFeedbackResponse'
      summary: Create Feedback
      tags:
      - Feedback
  /feedback/user/:id:
    get:
      consumes:
      - application/json
      description: Put all mandatory parameter
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.Response'
      summary: Get Feedback By User Id
      tags:
      - Feedback
  /healthcheck:
    get:
      consumes:
      - application/json
      description: Put all mandatory parameter
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Status'
            type: array
      summary: Check System Status
      tags:
      - Healthcheck
  /management/drug:
    get:
      consumes:
      - application/json
      description: Put all mandatory parameter
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.Response'
      summary: Get All Drug
      tags:
      - Management
  /management/drug/create:
    post:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: CreateDrugRequest
        in: body
        name: CreateDrugRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreateDrugRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CreateDrugResponse'
            type: array
      summary: Create Drug
      tags:
      - Management
  /profile:
    get:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get User Profile
      tags:
      - Profile
  /profile/edit:
    put:
      consumes:
      - application/json
      description: Put all mandatory parameter
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: EditUserRequest
        in: body
        name: EditUserRequest
        required: true
        schema:
          $ref: '#/definitions/dto.EditUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.EditUserResponse'
      summary: Edit User Profile
      tags:
      - Profile
swagger: "2.0"
